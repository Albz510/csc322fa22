<script src="https://threejs.org/build/three.js"></script>

var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.5, 1000 );

var renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );


const geo = new THREE.CylinderGeometry( 34, 55, 500, 4, true ).toNonIndexed(); 
const material = new THREE.MeshBasicMaterial({vertexColors: true});
const positionAttribute = geo.getAttribute( 'position' );
const colors = [];
const color = new THREE.Color();		
for ( let i = 0; i < positionAttribute.count; i +=3 ) 
    {
		
			color.set( 0xffffff ); 
			colors.push( color.r, color.g, color.b );	
      colors.push( color.r, color.g, color.b );	
      colors.push( color.r, color.g, color.b );	
      colors.push( color.r, color.g, color.b );	
      colors.push( color.r, color.g, color.b );	
      colors.push( color.r, color.g, color.b );	

		}
geo.setAttribute( 'color', new THREE.Float32BufferAttribute(colors, 3 ) );
const cylinder = new THREE.Mesh( geo, material );

const geo2 = new THREE.ConeGeometry(34, 55, 4, 1, true).toNonIndexed(); 
const material2 = new THREE.MeshBasicMaterial({vertexColors: true});
const positionAttribute2 = geo2.getAttribute( 'position' );
const colors2 = [];
const color2 = new THREE.Color();	
for ( let i = 0; i < positionAttribute2.count; i +=3 ) 
    {
		
			color2.set(  0xffffff ); 
			colors2.push( color2.r, color2.g, color2.b );	
      colors2.push( color2.r, color2.g, color2.b );	
      colors2.push( color2.r, color2.g, color2.b );	
      colors2.push( color2.r, color2.g, color2.b );	
      colors2.push( color2.r, color2.g, color2.b );	
      colors2.push( color2.r, color2.g, color2.b );	
		}
    
geo2.setAttribute( 'color', new THREE.Float32BufferAttribute( colors2, 3 ) );
const cone = new THREE.Mesh( geo2, material2 );

scene.add(cylinder);
scene.add(cone);
cone.position.y += 277;
camera.position.z = 1000;

const render = function() 
{
	requestAnimationFrame(render);
  renderer.render( scene, camera );
  cone.rotation.y += 0.01;
  cylinder.rotation.y += 0.01;
}

render();
